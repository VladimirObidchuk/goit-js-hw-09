{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["const formData = {\n  email: '',\n  message: '',\n};\n\nconst form = document.querySelector('.form');\n\nconst formInput = document.getElementById('email');\nconst formTextarea = document.getElementById('textarea');\nconst formBtn = document.querySelector('.form__btn');\n\nconst emailInput = form.elements.email;\nconst message = form.elements.message;\nconst emailErrorSpan = addErrorSpan(emailInput);\nconst messageErrorSpan = addErrorSpan(message);\n\nform.addEventListener('input', e => {\n  formData[e.target.name] = e.target.value;\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n});\n\nformBtn.addEventListener('click', e => {\n  e.preventDefault();\n  const login = emailInput.value.trim();\n  const message = formTextarea.value.trim();\n  let isValid = true;\n\n  if (!login) {\n    alert('Fill please all fields');\n    emailErrorSpan.textContent = 'Email is required';\n    isValid = false;\n  } else {\n    emailErrorSpan.textContent = '';\n  }\n  if (!message) {\n    messageErrorSpan.textContent = 'Password is required';\n    isValid = false;\n  } else {\n    messageErrorSpan.textContent = '';\n  }\n\n  if (login && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(login)) {\n    emailErrorSpan.textContent = 'Invalid email format';\n    isValid = false;\n  }\n  if (message && message.length < 8) {\n    messageErrorSpan.textContent = 'Message must be at least 8 characters long';\n    isValid = false;\n  }\n  if (!isValid) {\n    return;\n  }\n\n  formData.email = email.value;\n  formData.message = message;\n  console.log(formData);\n  form.reset();\n  localStorage.removeItem('feedback-form-state');\n});\n\nfunction addErrorSpan(inputElement) {\n  const errorSpan = document.createElement('span');\n  errorSpan.className = 'error-message';\n  errorSpan.style.color = 'red';\n  errorSpan.style.fontSize = '12px';\n  errorSpan.style.position = 'absolute';\n  errorSpan.style.bottom = '-16px';\n\n  inputElement.parentNode.insertBefore(errorSpan, inputElement.nextSibling);\n  return errorSpan;\n}\nwindow.addEventListener('DOMContentLoaded', () => {\n  const savedData = JSON.parse(localStorage.getItem('feedback-form-state'));\n  if (savedData) {\n    formData.email = savedData.email || '';\n    formData.message = savedData.message || '';\n    emailInput.value = formData.email;\n    formTextarea.value = formData.message;\n  }\n});\n"],"names":["formData","form","formTextarea","formBtn","emailInput","message","emailErrorSpan","addErrorSpan","messageErrorSpan","login","isValid","inputElement","errorSpan","savedData"],"mappings":"wFAAA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEMC,EAAO,SAAS,cAAc,OAAO,EAEzB,SAAS,eAAe,OAAO,EACjD,MAAMC,EAAe,SAAS,eAAe,UAAU,EACjDC,EAAU,SAAS,cAAc,YAAY,EAE7CC,EAAaH,EAAK,SAAS,MAC3BI,EAAUJ,EAAK,SAAS,QACxBK,EAAiBC,EAAaH,CAAU,EACxCI,EAAmBD,EAAaF,CAAO,EAE7CJ,EAAK,iBAAiB,QAAS,GAAK,CAClCD,EAAS,EAAE,OAAO,IAAI,EAAI,EAAE,OAAO,MACnC,aAAa,QAAQ,sBAAuB,KAAK,UAAUA,CAAQ,CAAC,CACtE,CAAC,EAEDG,EAAQ,iBAAiB,QAAS,GAAK,CACrC,EAAE,eAAc,EAChB,MAAMM,EAAQL,EAAW,MAAM,KAAI,EAC7BC,EAAUH,EAAa,MAAM,KAAI,EACvC,IAAIQ,EAAU,GAETD,EAKHH,EAAe,YAAc,IAJ7B,MAAM,wBAAwB,EAC9BA,EAAe,YAAc,oBAC7BI,EAAU,IAIPL,EAIHG,EAAiB,YAAc,IAH/BA,EAAiB,YAAc,uBAC/BE,EAAU,IAKRD,GAAS,CAAC,6BAA6B,KAAKA,CAAK,IACnDH,EAAe,YAAc,uBAC7BI,EAAU,IAERL,GAAWA,EAAQ,OAAS,IAC9BG,EAAiB,YAAc,6CAC/BE,EAAU,IAEPA,IAILV,EAAS,MAAQ,MAAM,MACvBA,EAAS,QAAUK,EACnB,QAAQ,IAAIL,CAAQ,EACpBC,EAAK,MAAK,EACV,aAAa,WAAW,qBAAqB,EAC/C,CAAC,EAED,SAASM,EAAaI,EAAc,CAClC,MAAMC,EAAY,SAAS,cAAc,MAAM,EAC/C,OAAAA,EAAU,UAAY,gBACtBA,EAAU,MAAM,MAAQ,MACxBA,EAAU,MAAM,SAAW,OAC3BA,EAAU,MAAM,SAAW,WAC3BA,EAAU,MAAM,OAAS,QAEzBD,EAAa,WAAW,aAAaC,EAAWD,EAAa,WAAW,EACjEC,CACT,CACA,OAAO,iBAAiB,mBAAoB,IAAM,CAChD,MAAMC,EAAY,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EACpEA,IACFb,EAAS,MAAQa,EAAU,OAAS,GACpCb,EAAS,QAAUa,EAAU,SAAW,GACxCT,EAAW,MAAQJ,EAAS,MAC5BE,EAAa,MAAQF,EAAS,QAElC,CAAC"}